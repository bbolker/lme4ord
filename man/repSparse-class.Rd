% Generated by roxygen2 (4.0.1): do not edit by hand
\docType{methods}
\name{repSparse-class}
\alias{diag,repSparse-method}
\alias{diag<-,repSparse-method}
\alias{dim.repSparse}
\alias{image.repSparse}
\alias{plot.repSparse}
\alias{print.repSparse}
\alias{repSparse-class}
\alias{t.repSparse}
\alias{update.repSparse}
\title{A repeated sparse matrix class}
\usage{
\method{print}{repSparse}(x, n = 6L, ...)

\method{update}{repSparse}(object, newPars, ...)

\method{image}{repSparse}(x, plain = FALSE, ...)

\method{plot}{repSparse}(x, y, plain = FALSE, ...)

\method{t}{repSparse}(x)

\S4method{diag}{repSparse}(x)

\S4method{diag}{repSparse}(x) <- value

\method{dim}{repSparse}(x)
}
\arguments{
\item{x}{\code{repSparse} object}

\item{n}{how many indices and repeated values to print?}

\item{...}{passed to subsequent functions}

\item{object}{\code{repSparse} object}

\item{newPars}{new parameter values}

\item{plain}{should a completely plain plot be used? (try and see)}

\item{y}{not used}

\item{value}{replacement value for diagonal}
}
\description{
An \code{S3} class for repeated sparse matrices, which are lists
with a \code{Dim} attribute and with the following elements:
\describe{
  \item{\code{rowInds}}{0-based row indices}
  \item{\code{colInds}}{0-based column indices}
  \item{\code{valInds}}{1-based indices for associating each \code{rowInds} and
                        \code{colInds} pair with the elements in \code{vals}}
  \item{\code{trans}}{A function for transforming a parameter vector
                      into \code{vals}.  This function is used by
                      \code{\link{update.repSparse}}}
}
Objects in this class can be constructed with
\code{\link{repSparse}} (and, for example,
\code{\link{repSparseDiag}}), and has several methods including
the following.
}
\details{
The \code{...} arguments for the \code{update.repSparse} method
can be used to specify special parameter arguments, if
\code{object$mkNewPars} exits (which is often the case for special
matrices such as \code{\link{repSparseTri}}.  This is a more
explicit approach and can therefore be more convenient than having
to figure out what order the parameters should appear in
\code{newPars}.  For example, \code{update(., diagVals = c(1, 1),
offDiagVals = -0.2)} is more explicit than \code{update(. c(1,
-0.2, 1))}.
}
\examples{
(X <- repSparse(rowInds = 1:6,
                colInds = rep(1:2, 3),
                valInds = rep(1:2, each = 3),
                vals    = c(-pi, pi)))
(Y <- update(X, c(0.2, 0.8)))
as.matrix(X, sparse = TRUE)
as.matrix(Y, sparse = TRUE)
image(kron(t(X), Y))
image(bind(X, Y, type = "diag"))
}

